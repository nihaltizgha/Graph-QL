enum TypeTr {
  DEPOT
  RETRAIT
}

enum TypeCompte {
  COURANT
  EPARGNE
}

type Query {
  allComptes: [Compte]
  compteById(id: ID): Compte
  transactionStats: TransactionStats
  compteTransactions(id: ID): [Transaction]
  totalSolde: SoldeStats
}

type Mutation {
  saveCompte(compte: CompteRequest): Compte
  addTransaction(transactionRequest: TransactionRequest): Transaction
}

type Compte {
  id: ID
  solde: Float
  dateCreation: String
  type: TypeCompte
  transactions: [Transaction]
}

type Transaction {
  id: ID
  montant: Float
  date: String
  type: TypeTr
  compte: Compte
}

input CompteRequest {
  solde: Float
  dateCreation: String
  type: TypeCompte
}

input TrRequest {
  compteId: ID
  montant: Float
  date: String
  type: TypeTr
}

input TransactionRequest {
  compteId: ID
  montant: Float
  date: String
  type: TypeTr
}

type SoldeStats {
  total: Float
  moyenne: Float
}

type TransactionStats {
  count: Int
  sumDepots: Float
  sumRetraits: Float
}
